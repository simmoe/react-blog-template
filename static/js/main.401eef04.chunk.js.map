{"version":3,"sources":["components/firebase.js","components/Header.js","components/Project.js","components/Projects.js","components/Contact.js","components/Login.js","components/Edit.js","components/ProjectDetail.js","components/Viewpager.js","components/ProjectsAnimated.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","props","useState","show","setShow","isPartiallyActive","isPartiallyCurrent","className","onClick","color","size","to","process","getProps","signedIn","Project","project","defaultImage","src","defaultImagethumbnailImage","alt","title","year","byline","id","window","confirm","firestore","collection","doc","delete","Projects","projects","setProjects","useEffect","orderBy","onSnapshot","snapshot","docs","add","description","timestamp","FieldValue","serverTimestamp","then","ref","navigate","catch","error","console","log","length","breakpointCols","default","1500","1200","columnClassName","map","index","next","prev","key","data","Contact","href","Login","localStorage","getItem","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","setItem","currentUser","displayName","signOut","photoURL","Edit","setProject","status","setStatus","imageName","setImageName","scrollTo","updateValue","e","persist","target","type","prevProject","name","checked","value","onSubmit","preventDefault","update","err","message","onChange","placeholder","htmlFor","defaultChecked","javascript","reactjs","userOriented","design","displayImage","detailImage","defaultValue","hidden","accept","randomizeFilename","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","str","n","lastIndexOf","slice","parseThumbname","ProjectDetail","setPrev","setNext","get","array","p","myPos","indexOf","styles","parallax","backgroundImage","height","width","backgroundAttachment","backgroundSize","backgroundPosition","style","parse","textAlign","Viewpager","pages","useRef","useSprings","i","x","innerWidth","sc","display","set","bind","useGesture","down","xDelta","delta","xDir","direction","distance","cancel","current","clamp","div","transform","interpolate","s","Default","App","setSignedIn","onAuthStateChanged","user","removeItem","path","ProjectsAnimated","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.401eef04.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC5ize_t5L01W_Q3TZmmxTfye1Z9rOSp0E\",\n    authDomain: \"web-firestore-authentication.firebaseapp.com\",\n    databaseURL: \"https://web-firestore-authentication.firebaseio.com\",\n    projectId: \"web-firestore-authentication\",\n    storageBucket: \"web-firestore-authentication.appspot.com\",\n    messagingSenderId: \"954309262588\",\n    appId: \"1:954309262588:web:c7d23d1466067040a0ab79\",\n    measurementId: \"G-TY9H31DPG5\"\n}\n// Initialize Firebase, firestore and authentication\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase","// HEADER\n\nimport React, {useState} from 'react'\nimport './Header.css'\nimport { Link } from '@reach/router'\nimport { MdMenu, MdClose } from 'react-icons/md'\n\nconst Header = (props) => {\n    const [show,setShow] = useState(false)\n    \n    const isPartiallyActive = ({\n        isPartiallyCurrent\n      }) => {\n        return isPartiallyCurrent\n          ? { className: \"active\" }\n          : null\n      }\n    return (\n        <div className='header-container'>\n            <div  onClick={() => setShow(!show)} className='burger'>\n                {\n                show \n                ? <MdClose color='white' size='32'/>\n                : <MdMenu color='white' size='32'/>\n                }\n            </div>\n        <header className={show ? 'mobile' : ''} onClick={ () => setShow(false) }>\n            <Link to={process.env.PUBLIC_URL + '/projects'} getProps={isPartiallyActive}>projects</Link>\n            <Link to={process.env.PUBLIC_URL + '/projects/animated'} getProps={isPartiallyActive}>animated</Link>\n            <Link to={process.env.PUBLIC_URL + '/contact'}>contact</Link>\n            <Link to={process.env.PUBLIC_URL + '/login'}>{\n                props.signedIn \n                ? 'profile' \n                : 'login'\n                }\n            </Link> \n        </header>\n        </div>\n    )\n}\n\nexport default Header","// PROJECT JS\nimport React from 'react'\nimport firebase from './firebase'\nimport { Link } from \"@reach/router\"\nimport {FaCode} from 'react-icons/fa'\nimport {MdDelete} from 'react-icons/md'\nimport './Project.css'\n\nconst Project = (props) => {\n    const deleteProject = () => {\n        if(window.confirm('sure?')){\n            firebase.firestore().collection('projects').doc(props.id).delete()\n        }\n    }\n    return (\n        \n        <div className=\"project\">\n            {\n            props.project.defaultImage && \n                <img src={\n                    props.project.defaultImagethumbnailImage \n                    ? props.project.defaultImagethumbnailImage\n                    : props.project.defaultImage\n                } alt='hei' />\n            }\n            <h1>{props.project.title}</h1>\n            <div className='project-year'>{props.project.year}</div>\n            <div className='project-byline'>{props.project.byline}</div>\n\n            <Link to={process.env.PUBLIC_URL \n                + '/projects/' + props.id \n            }>\n                Read more\n            </Link>\n\n            {props.signedIn && \n            \n            <div className='admin'>\n                <Link to={process.env.PUBLIC_URL + '/edit/' + props.id} className='edit-icons'>\n                    <FaCode className='edit-icon' />\n                </Link>\n                <MdDelete onClick={deleteProject} className='edit-icon' />\n            </div>\n            }\n        </div>\n    )\n} \nexport default Project\n","// HOME JS\n\nimport React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport {IoIosAddCircle} from 'react-icons/io'\nimport Masonry from 'react-masonry-css' \nimport { navigate } from '@reach/router'\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState([])\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('year', 'desc')\n            .onSnapshot(snapshot => \n                setProjects(snapshot.docs)\n            )\n    }, [])\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add({\n            title: '',\n            year:2020,\n            description: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(ref => {\n            navigate('/edit/' + ref.id)\n        }).catch( error => console.log(error))\n    } \n\n    return (\n        <main className='home'>\n        {\n            props.signedIn &&\n            <div className='admin-actions' onClick={addProject}>\n                <IoIosAddCircle className='edit-icon' />\n            </div>\n        }\n\n        {\n            projects.length > 0 \n        ? \n        <Masonry\n            breakpointCols={{\n                default: 3,\n                1500: 2,\n                1200: 1\n              }}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n                {\n                    projects.map(\n                        (doc, index) => \n                        <Project \n                            next={projects[index < (projects.length -1) ? index + 1 : 0].id} \n                            prev={projects[index !==0 ? index -1 : projects.length -1].id} \n                            key={doc.id} id={doc.id} project={doc.data()} signedIn={props.signedIn}/>\n                    )\n                }\n        </Masonry>\n        :\n            <p>Getting projects, hold on...</p>\n        }\n        </main>\n\n    )\n}\n\nexport default Projects\n","import React from 'react'\n\nconst Contact = (props) => {\n    return(\n        <main>\n            <div className='contact-info'>\n                <h1>Contact me</h1>\n                <p>Simon Moe</p>\n                <p>+45 6556 9898</p>\n                <a \n                href='mailto:simmoe@gmail.com'>\n                simmoe@gmail.com\n                </a>\n            </div>\n        </main>\n    )\n}\n\nexport default Contact","// LOGIN JS\n\nimport React from 'react'\nimport firebase from './firebase'\n\nconst Login = (props) => {\n\n    const loginWithGoogle = () => {\n\n        //make sure you've added google as sign in method in your firebase console\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth().signInWithPopup(provider)\n            .catch(function (error) {\n                console.log(error)\n            })\n        //set a local storage variable to indicate that login is pending\n        localStorage.setItem(\"Logging in\", true)\n    }\n\n    return (\n      <main className=\"login\">\n        {!props.signedIn && (\n            <>\n                {!localStorage.getItem(\"Logging in\") && <button onClick={loginWithGoogle}>use google to sign in</button>}\n                {localStorage.getItem(\"Logging in\") && <p>Log in progress, hold on...</p>}\n            </>\n        )}\n        {props.signedIn && (\n            <div>\n            <h1>You are logged in to firebase</h1>\n            <p>Welcome {firebase.auth().currentUser.displayName}. You are now signed-in.</p>\n            <button onClick={() => {firebase.auth().signOut(); }}>Sign-out</button>        \n            {firebase.auth().currentUser.photoURL && <img src={firebase.auth().currentUser.photoURL} alt='profile' />}\n            </div>\n        )}\n    </main>\n    )\n}\n\nexport default Login\n","import React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport FileUploader from 'react-firebase-file-uploader'\nimport './Edit.css'\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState() \n    const [status, setStatus] = useState('')\n    const [imageName, setImageName] = useState('defaultImage')\n\n    useEffect( () => {\n        window.scrollTo(0, 0)       \n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot(snapshot => {\n            setProject(snapshot.data())\n        })\n    }, [props.id])\n\n    const updateValue =  \n    //e.persist makes the element visible in the callback function\n    //the spread object syntax is JSX - makes the given value of post stay, while we update this value\n        e => {\n        e.persist()\n\n        switch(e.target.type){\n            case 'checkbox':\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.checked\n            }))\n            break\n\n            default:\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.value\n            }))\n\n        }\n    }\n\n    const saveProject = (e) => {\n        e.preventDefault() //abort reloading the page\n        setStatus('updating, please hold...')\n        firebase.firestore().collection('projects').doc(props.id).update(project)\n        .then(()=>{setStatus(\"project updated\")})\n        .catch(err => {\n            setStatus(\"Error saving project: \" + err.message)\n        })\n    }\n\n    const parseThumbname = (str) => {\n        const n = str.lastIndexOf('.')\n        const name = str.slice(0, n)\n        const ending = str.slice(n, str.length)\n        return name + '_400x400' + ending\n    }\n\n    const handleUploadStart = () => {setStatus('uploading image, please hold')}\n    const handleUploadError = (error) => {setStatus(error.message)}\n    const handleUploadSuccess = filename => {\n        firebase\n          .storage()\n          .ref(\"images\")\n          .child(filename)\n          .getDownloadURL()\n          .then(\n              url => setProject( prevProject => (\n            {\n                ...prevProject,\n                [imageName]: url,\n                [imageName + 'thumbnailImage']:parseThumbname(url)\n            }\n          ) ) )\n          setStatus('image ready')\n    }\n    return(\n        <main className='edit'>\n        <h1>Edit project</h1>\n        <p>Project id: {props.id}</p>\n        {\n            project && \n            <>\n            <form onSubmit={saveProject}>\n                <input name='title' onChange={updateValue} value={project.title} placeholder='project title' />\n                <input name='year' onChange={updateValue} placeholder='year' value={project.year} />\n                <input name='byline' onChange={updateValue} placeholder='byline' value={project.byline} />\n\n                <textarea name='description' placeholder='description' onChange={updateValue} value={project.description} />\n\n                <div className='checks'>\n                    <label htmlFor='condition'>javascript</label>\n                    <input type='checkbox' name='javascript' onChange={updateValue} defaultChecked={project.javascript}/>\n                    <label htmlFor='reactjs'>react js</label>\n                    <input type='checkbox' name='reactjs' onChange={updateValue} defaultChecked={project.reactjs}/>\n                    <label htmlFor='userOriented'>user-oriented</label>\n                    <input type='checkbox' name='userOriented' onChange={updateValue} defaultChecked={project.userOriented}/>\n                    <label htmlFor='design'>design</label>\n                    <input type='checkbox' name='design' onChange={updateValue} defaultChecked={project.design}/>\n                </div>\n\n                <div className='edit-images'>\n                {\n                    project.defaultImage && \n                    <div>\n                        <h3>default</h3>\n                        <img alt='post img' src={project.defaultImage} />\n                    </div>\n                }\n                {\n                    project.displayImage && \n                    <div>\n                        <h3>display</h3>\n                        <img alt='post img' src={project.displayImage} />\n                    </div>\n                }\n                {\n                    project.detailImage && \n                    <div>\n                        <h3>detail</h3>\n                        <img alt='post img' src={project.detailImage} />\n                    </div>\n                }\n                </div>\n\n                <select name='imageName' onChange={ e => {setImageName(e.target.value)} }>\n                    <option defaultValue name='defaultImage' value={'defaultImage'}>default image</option>\n                    <option name='displayImage' value={'displayImage'}>display image</option>\n                    <option name='detailImage' value={'detailImage'}>detail image</option>\n                </select>\n\n                <label>\n                <div className='add'>{project.defaultImage ? 'new image' : 'add image'}</div>\n                <FileUploader\n                    hidden\n                    accept=\"image/*\"\n                    name=\"picture\"\n                    randomizeFilename\n                    storageRef={firebase.storage().ref(\"images\")}\n                    onUploadStart={handleUploadStart}\n                    onUploadError={handleUploadError}\n                    onUploadSuccess={handleUploadSuccess}\n                />\n                </label>\n                <button type='submit'>save</button>\n            </form>\n            <p>{status}</p>\n            </>\n        }\n        </main>\n    )\n}\n\n\nexport default Edit\n\n","// PROJECTDETAIL JS\nimport React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport { Link } from \"@reach/router\"\nimport './ProjectDetail.css'\nimport parse from 'html-react-parser'\n\nconst ProjectDetail = props => {  \n    const [project, setProject] = useState()\n    const [prev, setPrev] = useState(0)\n    const [next, setNext] = useState(0)\n\n    window.scrollTo(0,0)\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot( snapshot => setProject(snapshot.data()) )\n\n    }, [props.id])\n\n    useEffect(()=>{\n        firebase.firestore().collection('projects')\n            .orderBy('year', 'desc')\n            .get()\n            .then( projects => {\n                const array = projects.docs.map( p => p.id )\n                const myPos = array.indexOf(props.id)\n                setNext( myPos + 1 === array.length ? array[0] : array[myPos + 1])\n                setPrev( myPos === 0 ? array[array.length - 1] : array[myPos - 1])\n            } )\n    }, [props.id])\n\n    let styles = {}\n    if(project){\n        styles = {\n            parallax:{\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                height:'100vh',\n                width:'100vw',\n                backgroundAttachment:'fixed',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center center',\n            },\n        }\n    } \n    return (\n        <main className=\"project-detail\">\n            {\n            project \n            ?\n            <div>\n                <div style={styles.parallax}>\n                    <div className='parallax-overlay'>\n                        <div>\n                            <h1>{project.title}</h1>\n                            <p>{project.year}</p>\n                            <div className='project-features'>\n                                <ul>\n                                {project.javascript && <li>Javascript</li>}\n                                {project.reactjs && <li>React JS</li>}\n                                {project.userOriented && <li>User oriented</li>}\n                                {project.design && <li>Design</li>}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='project-content'>\n                    <div className='admin-actions pager'>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + prev}>prev</Link>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + next}>next</Link>\n                    </div>\n\n                    <div className='project-images'>                    \n                        {project.defaultImage && <img src={project.defaultImage} alt='hei' />}\n                        {project.displayImage && <img src={project.displayImage} alt='hei' />}\n                        {project.detailImage && <img src={project.detailImage} alt='hei' />}\n                    </div>                    \n\n                    <div>{parse(project.description)}</div>\n                </div>\n            </div>\n            :\n            <h2 style={{textAlign:'center'}}>Fetching project, hold on...</h2>\n            }\n        </main>\n    )\n} \nexport default ProjectDetail\n","import React, { useRef } from 'react'\nimport clamp from 'lodash-es/clamp'\nimport { useSprings, animated } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './Viewpager.css'\nimport { Link, navigate } from '@reach/router'\nimport { MdDelete } from 'react-icons/md'\nimport { FaCode } from 'react-icons/fa'\nimport firebase from './firebase'\n\nconst Viewpager = props => {\n    const deleteProject = (id) => {\n        if(window.confirm('sure?')){\n            firebase.firestore().collection('projects').doc(id).delete()\n        }\n    }\n\n  const pages = props.projects\n  const index = useRef(0)\n  const [array, set] = useSprings(pages.length, i => ({ x: i * window.innerWidth, sc: 1, display: 'block' }))\n  const bind = useGesture(({ down, delta: [xDelta], direction: [xDir], distance, cancel }) => {\n    if (down && distance > window.innerWidth / 2)\n      cancel((index.current = clamp(index.current + (xDir > 0 ? -1 : 1), 0, pages.length - 1)))\n    set(i => {\n      if (i < index.current - 1 || i > index.current + 1) return { display: 'none' }\n      const x = (i - index.current) * window.innerWidth + (down ? xDelta : 0)\n      const sc = down ? 1 - distance / window.innerWidth / 2 : 1\n      return { x, sc, display: 'block' }\n    })\n  })\n  return (\n    <div id='pager-main'>\n        <div id='pager-container'>\n            <div id='pager-root'>\n                {\n                array.map(({ x, display, sc }, i) => (\n                    <animated.div \n                        {...bind()} key={i} style={{ display, transform: x.interpolate(x => `translate3d(${x}px,0,0)`) }}>\n                        <animated.div \n                            style={{ transform: sc.interpolate(s => `scale(${s})`), backgroundImage: `url(${pages[i].data().defaultImage})` }} >\n                                <div className='slider-content'>\n                                    <div>\n                                        <h1>{pages[i].data().title}</h1>\n                                        <p onClick={ \n                                            () => navigate(process.env.PUBLIC_URL + '/projects/' + pages[i].id)}>\n                                            view project\n                                        </p>\n                                    </div>\n                                    {\n                                    props.signedIn &&                                        \n                                    <div className='admin'>\n                                        <Link to={process.env.PUBLIC_URL + '/edit/' + pages[i].id} className='edit-icons'>\n                                            <FaCode className='edit-icon' />\n                                        </Link>\n                                        <MdDelete onClick={()=>deleteProject(pages[i].id)} className='edit-icon' />\n                                    </div>\n                                    }\n                                </div>\n                        </animated.div>\n                    </animated.div>\n                ))\n                }\n            </div>\n        </div>\n    </div>\n  )\n  \n}\n\nexport default Viewpager\n\n","// HOME JS\n\nimport React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport Viewpager from './Viewpager'\nimport {IoIosAddCircle} from 'react-icons/io'\nimport { navigate } from '@reach/router'\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState([])\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('year', 'desc')\n            .onSnapshot(snapshot => \n                setProjects(snapshot.docs)\n            )\n    }, [])\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add({\n            title: '',\n            year:2020,\n            description: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(ref => {\n            navigate('/edit/' + ref.id)\n        }).catch( error => console.log(error))\n    } \n\n    return (\n        <main className='animated'>\n        {\n            props.signedIn &&\n            <div className='admin-actions' onClick={addProject}>\n                <IoIosAddCircle className='edit-icon' />\n            </div>\n        }\n\n        {\n            projects.length > 0 \n        ? \n            <Viewpager projects={projects} signedIn={props.signedIn}/>\n        :\n            <p>Getting projects, hold on...</p>\n        }\n        </main>\n\n    )\n}\n\nexport default Projects\n","import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport firebase from './components/firebase'\nimport { Router, navigate } from \"@reach/router\"\nimport Header from \"./components/Header\"\nimport Projects from \"./components/Projects\"\nimport Contact from \"./components/Contact\"\nimport Login from \"./components/Login\"\nimport Edit from \"./components/Edit\"\nimport ProjectDetail from './components/ProjectDetail'\nimport ProjectsAnimated from './components/ProjectsAnimated'\n\nconst Default = () => {\n    console.log('caught by default')\n    navigate(process.env.PUBLIC_URL + '/projects')\n    return( <></>)\n}\n\nconst App = () => {\n    const [signedIn, setSignedIn] = useState(false)\n    useEffect( ()=> {\n        firebase.auth().onAuthStateChanged(\n            user => {\n                if(user){\n                    setSignedIn(true)\n                    //remove local storage variable\n                    localStorage.removeItem(\"Logging in\")\n                }else{\n                    setSignedIn(false)\n                }\n            }\n        )\n    })\n\n    return (\n        <div>\n            <Header signedIn={signedIn} />            \n            <Router>\n                <Default path={process.env.PUBLIC_URL + '/'} Default />\n                <Projects path={process.env.PUBLIC_URL + '/projects'} signedIn={signedIn} />\n                <ProjectsAnimated path={process.env.PUBLIC_URL + '/projects/animated'} signedIn={signedIn} />\n                <ProjectDetail path={process.env.PUBLIC_URL + '/projects/:id'} />\n                <Contact path={process.env.PUBLIC_URL + '/contact'} signedIn={signedIn} />\n                <Login path={process.env.PUBLIC_URL + '/login'} signedIn={signedIn} />\n                <Edit path={process.env.PUBLIC_URL + '/edit/:id'} />\n            </Router>\n        </div>\n    )\n} \n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}