{"version":3,"sources":["components/firebase.js","components/Header.js","components/Contact.js","components/Login.js","components/Edit.js","components/ProjectDetail.js","components/Viewpager.js","components/ProjectsAnimated.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","props","useState","show","setShow","className","onClick","color","size","to","process","getProps","isPartiallyCurrent","signedIn","Contact","href","Login","localStorage","getItem","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","catch","error","console","log","setItem","currentUser","displayName","signOut","photoURL","src","alt","Edit","project","setProject","status","setStatus","imageName","setImageName","useEffect","window","scrollTo","firestore","collection","doc","id","onSnapshot","snapshot","data","updateValue","e","persist","target","type","prevProject","name","checked","value","onSubmit","preventDefault","update","then","err","message","onChange","title","placeholder","year","byline","description","htmlFor","defaultChecked","javascript","reactjs","userOriented","design","defaultImage","displayImage","detailImage","defaultValue","hidden","accept","randomizeFilename","storageRef","storage","ref","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","str","n","lastIndexOf","slice","length","parseThumbname","ProjectDetail","prev","setPrev","next","setNext","orderBy","get","projects","array","docs","map","p","myPos","indexOf","styles","parallax","backgroundImage","height","width","backgroundAttachment","backgroundSize","backgroundPosition","style","parse","textAlign","Viewpager","pages","index","useRef","useSprings","i","x","innerWidth","sc","display","set","bind","useGesture","down","xDelta","delta","xDir","direction","distance","cancel","current","clamp","div","key","transform","interpolate","s","navigate","confirm","delete","ProjectsAnimated","setProjects","add","timestamp","FieldValue","serverTimestamp","App","setSignedIn","onAuthStateChanged","user","removeItem","default","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4YAaAA,IAASC,cAXY,CACjBC,OAAQ,0CACRC,WAAY,+CACZC,YAAa,sDACbC,UAAW,+BACXC,cAAe,2CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJT,QAAf,E,uBCyBeU,EAjCA,SAACC,GAAW,IAAD,EACCC,oBAAS,GADV,mBACfC,EADe,KACVC,EADU,KAUtB,OACI,yBAAKC,UAAU,oBACX,yBAAMC,QAAS,kBAAMF,GAASD,IAAOE,UAAU,UAE3CF,EACE,kBAAC,IAAD,CAASI,MAAM,QAAQC,KAAK,OAC5B,kBAAC,IAAD,CAAQD,MAAM,QAAQC,KAAK,QAGrC,4BAAQH,UAAWF,EAAO,SAAW,GAAIG,QAAU,kBAAMF,GAAQ,KAC7D,kBAAC,IAAD,CAAMK,GAAIC,gCAAsCC,SAjB9B,SAAC,GAGvB,OADI,EADJC,mBAGI,CAAEP,UAAW,UACb,OAYA,YACA,kBAAC,IAAD,CAAMI,GAAIC,gCAAV,WACA,kBAAC,IAAD,CAAMD,GAAIC,8BACNT,EAAMY,SACJ,UACA,Y,wBCdHC,G,MAhBC,SAACb,GACb,OACI,8BACI,yBAAKI,UAAU,gBACX,0CACA,wCACA,4CACA,uBACAU,KAAK,2BADL,wBCiCDC,EArCD,SAACf,GAiBX,OACE,0BAAMI,UAAU,UACZJ,EAAMY,UACJ,qCACMI,aAAaC,QAAQ,eAAiB,4BAAQZ,QAnBpC,WAGpB,IAAIa,EAAW,IAAI7B,EAAS8B,KAAKC,mBACjCF,EAASG,SAAS,WAClBH,EAASG,SAAS,SAElBhC,EAAS8B,OAAOG,gBAAgBJ,GAC3BK,OAAM,SAAUC,GACbC,QAAQC,IAAIF,MAGpBR,aAAaW,QAAQ,cAAc,KAOa,yBACvCX,aAAaC,QAAQ,eAAiB,2DAG9CjB,EAAMY,UACH,6BACA,6DACA,sCAAYvB,EAAS8B,OAAOS,YAAYC,YAAxC,4BACA,4BAAQxB,QAAS,WAAOhB,EAAS8B,OAAOW,YAAxC,YACCzC,EAAS8B,OAAOS,YAAYG,UAAY,yBAAKC,IAAK3C,EAAS8B,OAAOS,YAAYG,SAAUE,IAAI,e,gCCwH1FC,G,MAtJF,SAAClC,GAAW,IAAD,EAEUC,qBAFV,mBAEbkC,EAFa,KAEJC,EAFI,OAGQnC,mBAAS,IAHjB,mBAGboC,EAHa,KAGLC,EAHK,OAIcrC,mBAAS,gBAJvB,mBAIbsC,EAJa,KAIFC,EAJE,KAMpBC,qBAAW,WACPC,OAAOC,SAAS,EAAG,GACnBtD,EAASuD,YAAYC,WAAW,YAAYC,IAAI9C,EAAM+C,IACjDC,YAAW,SAAAC,GACZb,EAAWa,EAASC,aAEzB,CAAClD,EAAM+C,KAEV,IAAMI,EAGF,SAAAC,GAGA,OAFAA,EAAEC,UAEKD,EAAEE,OAAOC,MACZ,IAAK,WACLnB,GAAW,SAAAoB,GAAW,sBACfA,EADe,eAEjBJ,EAAEE,OAAOG,KAAOL,EAAEE,OAAOI,aAE9B,MAEA,QACAtB,GAAW,SAAAoB,GAAW,sBACfA,EADe,eAEjBJ,EAAEE,OAAOG,KAAOL,EAAEE,OAAOK,aAyCtC,OACI,0BAAMvD,UAAU,QAChB,4CACA,0CAAgBJ,EAAM+C,IAElBZ,GACA,oCACA,0BAAMyB,SA1CM,SAACR,GACjBA,EAAES,iBACFvB,EAAU,4BACVjD,EAASuD,YAAYC,WAAW,YAAYC,IAAI9C,EAAM+C,IAAIe,OAAO3B,GAChE4B,MAAK,WAAKzB,EAAU,sBACpBf,OAAM,SAAAyC,GACH1B,EAAU,yBAA2B0B,EAAIC,cAqCrC,2BAAOR,KAAK,QAAQS,SAAUf,EAAaQ,MAAOxB,EAAQgC,MAAOC,YAAY,kBAC7E,2BAAOX,KAAK,OAAOS,SAAUf,EAAaiB,YAAY,OAAOT,MAAOxB,EAAQkC,OAC5E,2BAAOZ,KAAK,SAASS,SAAUf,EAAaiB,YAAY,SAAST,MAAOxB,EAAQmC,SAEhF,8BAAUb,KAAK,cAAcW,YAAY,cAAcF,SAAUf,EAAaQ,MAAOxB,EAAQoC,cAE7F,yBAAKnE,UAAU,UACX,2BAAOoE,QAAQ,aAAf,cACA,2BAAOjB,KAAK,WAAWE,KAAK,aAAaS,SAAUf,EAAasB,eAAgBtC,EAAQuC,aACxF,2BAAOF,QAAQ,WAAf,YACA,2BAAOjB,KAAK,WAAWE,KAAK,UAAUS,SAAUf,EAAasB,eAAgBtC,EAAQwC,UACrF,2BAAOH,QAAQ,gBAAf,iBACA,2BAAOjB,KAAK,WAAWE,KAAK,eAAeS,SAAUf,EAAasB,eAAgBtC,EAAQyC,eAC1F,2BAAOJ,QAAQ,UAAf,UACA,2BAAOjB,KAAK,WAAWE,KAAK,SAASS,SAAUf,EAAasB,eAAgBtC,EAAQ0C,UAGxF,yBAAKzE,UAAU,eAEX+B,EAAQ2C,cACR,6BACI,uCACA,yBAAK7C,IAAI,WAAWD,IAAKG,EAAQ2C,gBAIrC3C,EAAQ4C,cACR,6BACI,uCACA,yBAAK9C,IAAI,WAAWD,IAAKG,EAAQ4C,gBAIrC5C,EAAQ6C,aACR,6BACI,sCACA,yBAAK/C,IAAI,WAAWD,IAAKG,EAAQ6C,gBAKzC,4BAAQvB,KAAK,YAAYS,SAAW,SAAAd,GAAMZ,EAAaY,EAAEE,OAAOK,SAC5D,4BAAQsB,cAAY,EAACxB,KAAK,eAAeE,MAAO,gBAAhD,iBACA,4BAAQF,KAAK,eAAeE,MAAO,gBAAnC,iBACA,4BAAQF,KAAK,cAAcE,MAAO,eAAlC,iBAGJ,+BACA,yBAAKvD,UAAU,OAAO+B,EAAQ2C,aAAe,YAAc,aAC3D,kBAAC,IAAD,CACII,QAAM,EACNC,OAAO,UACP1B,KAAK,UACL2B,mBAAiB,EACjBC,WAAYhG,EAASiG,UAAUC,IAAI,UACnCC,cAjFU,WAAOlD,EAAU,iCAkF3BmD,cAjFU,SAACjE,GAAWc,EAAUd,EAAMyC,UAkFtCyB,gBAjFY,SAAAC,GACxBtG,EACGiG,UACAC,IAAI,UACJK,MAAMD,GACNE,iBACA9B,MACG,SAAA+B,GAAG,OAAI1D,GAAY,SAAAoB,GAAW,4BAEzBA,GAFyB,mBAG3BjB,EAAYuD,GAHe,cAI3BvD,EAAY,iBApBF,SAACwD,GACpB,IAAMC,EAAID,EAAIE,YAAY,KAG1B,OAFaF,EAAIG,MAAM,EAAGF,GAEZ,WADCD,EAAIG,MAAMF,EAAGD,EAAII,QAiBOC,CAAeN,IAJlB,UAOlCxD,EAAU,mBAsEJ,4BAAQiB,KAAK,UAAb,SAEJ,2BAAIlB,O,yBC7DDgE,EAjFO,SAAArG,GAAU,IAAD,EACGC,qBADH,mBACpBkC,EADoB,KACXC,EADW,OAEHnC,mBAAS,GAFN,mBAEpBqG,EAFoB,KAEdC,EAFc,OAGHtG,mBAAS,GAHN,mBAGpBuG,EAHoB,KAGdC,EAHc,KAK3B/D,OAAOC,SAAS,EAAE,GAElBF,qBAAW,WACPpD,EAASuD,YAAYC,WAAW,YAAYC,IAAI9C,EAAM+C,IACjDC,YAAY,SAAAC,GAAQ,OAAIb,EAAWa,EAASC,aAElD,CAAClD,EAAM+C,KAEVN,qBAAU,WACNpD,EAASuD,YAAYC,WAAW,YAC3B6D,QAAQ,OAAQ,QAChBC,MACA5C,MAAM,SAAA6C,GACH,IAAMC,EAAQD,EAASE,KAAKC,KAAK,SAAAC,GAAC,OAAIA,EAAEjE,MAClCkE,EAAQJ,EAAMK,QAAQlH,EAAM+C,IAClC0D,EAASQ,EAAQ,IAAMJ,EAAMV,OAASU,EAAM,GAAKA,EAAMI,EAAQ,IAC/DV,EAAmB,IAAVU,EAAcJ,EAAMA,EAAMV,OAAS,GAAKU,EAAMI,EAAQ,SAExE,CAACjH,EAAM+C,KAEV,IAAIoE,EAAS,GAab,OAZGhF,IACCgF,EAAS,CACLC,SAAS,CACLC,gBAAiB,OAASlF,EAAQ2C,aAAe,IACjDwC,OAAO,QACPC,MAAM,QACNC,qBAAqB,QACrBC,eAAgB,QAChBC,mBAAoB,mBAK5B,0BAAMtH,UAAU,kBAEZ+B,EAEA,6BACI,yBAAKwF,MAAOR,EAAOC,UACf,yBAAKhH,UAAU,oBACX,6BACI,4BAAK+B,EAAQgC,OACb,2BAAIhC,EAAQkC,SAIxB,yBAAKjE,UAAU,mBACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMI,GAAIC,iCAAwC6F,GAAlD,QACA,kBAAC,IAAD,CAAM9F,GAAIC,iCAAwC+F,GAAlD,SAGJ,yBAAKpG,UAAU,kBACV+B,EAAQ2C,cAAgB,yBAAK9C,IAAKG,EAAQ2C,aAAc7C,IAAI,QAC5DE,EAAQ4C,cAAgB,yBAAK/C,IAAKG,EAAQ4C,aAAc9C,IAAI,QAC5DE,EAAQ6C,aAAe,yBAAKhD,IAAKG,EAAQ6C,YAAa/C,IAAI,SAG/D,6BAAM2F,IAAMzF,EAAQoC,cACpB,yBAAKnE,UAAU,oBACX,4BACC+B,EAAQuC,YAAc,0CACtBvC,EAAQwC,SAAW,wCACnBxC,EAAQyC,cAAgB,6CACxBzC,EAAQ0C,QAAU,0CAM/B,wBAAI8C,MAAO,CAACJ,MAAM,QAAQM,UAAU,WAApC,kC,wBCZGC,G,MA3DG,SAAA9H,GACd,IAMI+H,EAAQ/H,EAAM4G,SACdoB,EAAQC,iBAAO,GARI,EASJC,YAAWH,EAAM5B,QAAQ,SAAAgC,GAAC,MAAK,CAAEC,EAAGD,EAAIzF,OAAO2F,WAAYC,GAAI,EAAGC,QAAS,YATvE,mBASlB1B,EATkB,KASX2B,EATW,KAUnBC,EAAOC,aAAW,YAAqE,IAAlEC,EAAiE,EAAjEA,KAAcC,EAAmD,cAA3DC,MAA2D,MAA9BC,EAA8B,cAA1CC,UAA0C,MAAvBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACzEN,GAAQK,EAAWtG,OAAO2F,WAAa,GACzCY,EAAQjB,EAAMkB,QAAUC,YAAMnB,EAAMkB,SAAWJ,EAAO,GAAK,EAAI,GAAI,EAAGf,EAAM5B,OAAS,IACvFqC,GAAI,SAAAL,GACF,OAAIA,EAAIH,EAAMkB,QAAU,GAAKf,EAAIH,EAAMkB,QAAU,EAAU,CAAEX,QAAS,QAG/D,CAAEH,GAFED,EAAIH,EAAMkB,SAAWxG,OAAO2F,YAAcM,EAAOC,EAAS,GAEzDN,GADDK,EAAO,EAAIK,EAAWtG,OAAO2F,WAAa,EAAI,EACzCE,QAAS,eAG7B,OACE,yBAAKxF,GAAG,cACJ,yBAAKA,GAAG,mBACJ,yBAAKA,GAAG,cAEJ8D,EAAME,KAAI,WAAqBoB,GAArB,IAAGC,EAAH,EAAGA,EAAGG,EAAN,EAAMA,QAASD,EAAf,EAAeA,GAAf,OACN,kBAAC,IAASc,IAAV,iBACQX,IADR,CACgBY,IAAKlB,EAAGR,MAAO,CAAEY,UAASe,UAAWlB,EAAEmB,aAAY,SAAAnB,GAAC,4BAAmBA,EAAnB,iBAChE,kBAAC,IAASgB,IAAV,CACIzB,MAAO,CAAE2B,UAAWhB,EAAGiB,aAAY,SAAAC,GAAC,sBAAaA,EAAb,QAAoBnC,gBAAgB,OAAD,OAASU,EAAMI,GAAGjF,OAAO4B,aAAzB,OACnE,yBAAK1E,UAAU,kBACX,6BACI,4BAAK2H,EAAMI,GAAGjF,OAAOiB,OACrB,uBAAG9D,QACC,kBAAMoJ,YAAShJ,iCAAwCsH,EAAMI,GAAGpF,MADpE,iBAMJ/C,EAAMY,UACN,yBAAKR,UAAU,SACX,kBAAC,IAAD,CAAMI,GAAIC,6BAAoCsH,EAAMI,GAAGpF,GAAI3C,UAAU,cACjE,kBAAC,IAAD,CAAQA,UAAU,eAEtB,kBAAC,IAAD,CAAUC,QAAS,kBA3ChC0C,EA2CkDgF,EAAMI,GAAGpF,QA1C3EL,OAAOgH,QAAQ,UACdrK,EAASuD,YAAYC,WAAW,YAAYC,IAAIC,GAAI4G,UAFtC,IAAC5G,GA2CgE3C,UAAU,0BCDtFwJ,EA7CU,SAAC5J,GAAW,IAAD,EACAC,mBAAS,IADT,mBACzB2G,EADyB,KACfiD,EADe,KAGhCpH,qBAAU,WACNpD,EACKuD,YACAC,WAAW,YACX6D,QAAQ,OAAQ,QAChB1D,YAAW,SAAAC,GAAQ,OAChB4G,EAAY5G,EAAS6D,WAE9B,IAaH,OACI,0BAAM1G,UAAU,YAEZJ,EAAMY,UACN,yBAAKR,UAAU,gBAAgBC,QAfpB,WACfhB,EAASuD,YAAYC,WAAW,YAAYiH,IAAI,CAC5C3F,MAAO,GACPE,KAAK,KACLE,YAAa,GACbwF,UAAW1K,EAASuD,UAAUoH,WAAWC,oBAC1ClG,MAAK,SAAAwB,GACJkE,YAAS,SAAWlE,EAAIxC,OACzBxB,OAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAQvB,kBAAC,IAAD,CAAgBpB,UAAU,eAK9BwG,EAAST,OAAS,EAElB,kBAAC,EAAD,CAAWS,SAAUA,EAAUhG,SAAUZ,EAAMY,WAE/C,6DCJGsJ,EA9BH,WAAO,IAAD,EACkBjK,oBAAS,GAD3B,mBACPW,EADO,KACGuJ,EADH,KAgBd,OAdA1H,qBAAW,WACPpD,EAAS8B,OAAOiJ,oBACZ,SAAAC,GACOA,GACCF,GAAY,GAEZnJ,aAAasJ,WAAW,eAExBH,GAAY,SAOxB,6BACI,kBAAC,EAAD,CAAQvJ,SAAUA,IAClB,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAkB2J,SAAO,EAACC,KAAK,YAAY5J,SAAUA,IACrD,kBAAC,EAAD,CAAgB4J,KAAM/J,sCACtB,kBAAC,EAAD,CAAS+J,KAAM/J,+BAAqCG,SAAUA,IAC9D,kBAAC,EAAD,CAAO4J,KAAM/J,6BAAmCG,SAAUA,IAC1D,kBAAC,EAAD,CAAM4J,KAAM/J,qCCxBRgK,QACW,cAA7B/H,OAAOgI,SAASC,UAEe,UAA7BjI,OAAOgI,SAASC,UAEhBjI,OAAOgI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,MAAK,SAAAqH,GACjCA,EAAaC,kB","file":"static/js/main.760eae59.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC5ize_t5L01W_Q3TZmmxTfye1Z9rOSp0E\",\n    authDomain: \"web-firestore-authentication.firebaseapp.com\",\n    databaseURL: \"https://web-firestore-authentication.firebaseio.com\",\n    projectId: \"web-firestore-authentication\",\n    storageBucket: \"web-firestore-authentication.appspot.com\",\n    messagingSenderId: \"954309262588\",\n    appId: \"1:954309262588:web:c7d23d1466067040a0ab79\",\n    measurementId: \"G-TY9H31DPG5\"\n}\n// Initialize Firebase, firestore and authentication\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase","// HEADER\n\nimport React, {useState} from 'react'\nimport './Header.css'\nimport { Link } from '@reach/router'\nimport { MdMenu, MdClose } from 'react-icons/md'\n\nconst Header = (props) => {\n    const [show,setShow] = useState(false)\n    \n    const isPartiallyActive = ({\n        isPartiallyCurrent\n      }) => {\n        return isPartiallyCurrent\n          ? { className: \"active\" }\n          : null\n      }\n    return (\n        <div className='header-container'>\n            <div  onClick={() => setShow(!show)} className='burger'>\n                {\n                show \n                ? <MdClose color='white' size='32'/>\n                : <MdMenu color='white' size='32'/>\n                }\n            </div>\n        <header className={show ? 'mobile' : ''} onClick={ () => setShow(false) }>\n            <Link to={process.env.PUBLIC_URL + '/projects'} getProps={isPartiallyActive}>projects</Link>\n            <Link to={process.env.PUBLIC_URL + '/contact'}>contact</Link>\n            <Link to={process.env.PUBLIC_URL + '/login'}>{\n                props.signedIn \n                ? 'profile' \n                : 'login'\n                }\n            </Link> \n        </header>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Contact = (props) => {\n    return(\n        <main>\n            <div className='contact-info'>\n                <h1>Contact me</h1>\n                <p>Simon Moe</p>\n                <p>+45 6556 9898</p>\n                <a \n                href='mailto:simmoe@gmail.com'>\n                simmoe@gmail.com\n                </a>\n            </div>\n        </main>\n    )\n}\n\nexport default Contact","// LOGIN JS\n\nimport React from 'react'\nimport firebase from './firebase'\n\nconst Login = (props) => {\n\n    const loginWithGoogle = () => {\n\n        //make sure you've added google as sign in method in your firebase console\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth().signInWithPopup(provider)\n            .catch(function (error) {\n                console.log(error)\n            })\n        //set a local storage variable to indicate that login is pending\n        localStorage.setItem(\"Logging in\", true)\n    }\n\n    return (\n      <main className=\"login\">\n        {!props.signedIn && (\n            <>\n                {!localStorage.getItem(\"Logging in\") && <button onClick={loginWithGoogle}>use google to sign in</button>}\n                {localStorage.getItem(\"Logging in\") && <p>Log in progress, hold on...</p>}\n            </>\n        )}\n        {props.signedIn && (\n            <div>\n            <h1>You are logged in to firebase</h1>\n            <p>Welcome {firebase.auth().currentUser.displayName}. You are now signed-in.</p>\n            <button onClick={() => {firebase.auth().signOut(); }}>Sign-out</button>        \n            {firebase.auth().currentUser.photoURL && <img src={firebase.auth().currentUser.photoURL} alt='profile' />}\n            </div>\n        )}\n    </main>\n    )\n}\n\nexport default Login\n","import React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport FileUploader from 'react-firebase-file-uploader'\nimport './Edit.css'\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState() \n    const [status, setStatus] = useState('')\n    const [imageName, setImageName] = useState('defaultImage')\n\n    useEffect( () => {\n        window.scrollTo(0, 0)       \n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot(snapshot => {\n            setProject(snapshot.data())\n        })\n    }, [props.id])\n\n    const updateValue =  \n    //e.persist makes the element visible in the callback function\n    //the spread object syntax is JSX - makes the given value of post stay, while we update this value\n        e => {\n        e.persist()\n\n        switch(e.target.type){\n            case 'checkbox':\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.checked\n            }))\n            break\n\n            default:\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.value\n            }))\n\n        }\n    }\n\n    const saveProject = (e) => {\n        e.preventDefault() //abort reloading the page\n        setStatus('updating, please hold...')\n        firebase.firestore().collection('projects').doc(props.id).update(project)\n        .then(()=>{setStatus(\"project updated\")})\n        .catch(err => {\n            setStatus(\"Error saving project: \" + err.message)\n        })\n    }\n\n    const parseThumbname = (str) => {\n        const n = str.lastIndexOf('.')\n        const name = str.slice(0, n)\n        const ending = str.slice(n, str.length)\n        return name + '_400x400' + ending\n    }\n\n    const handleUploadStart = () => {setStatus('uploading image, please hold')}\n    const handleUploadError = (error) => {setStatus(error.message)}\n    const handleUploadSuccess = filename => {\n        firebase\n          .storage()\n          .ref(\"images\")\n          .child(filename)\n          .getDownloadURL()\n          .then(\n              url => setProject( prevProject => (\n            {\n                ...prevProject,\n                [imageName]: url,\n                [imageName + 'thumbnailImage']:parseThumbname(url)\n            }\n          ) ) )\n          setStatus('image ready')\n    }\n    return(\n        <main className='edit'>\n        <h1>Edit project</h1>\n        <p>Project id: {props.id}</p>\n        {\n            project && \n            <>\n            <form onSubmit={saveProject}>\n                <input name='title' onChange={updateValue} value={project.title} placeholder='project title' />\n                <input name='year' onChange={updateValue} placeholder='year' value={project.year} />\n                <input name='byline' onChange={updateValue} placeholder='byline' value={project.byline} />\n\n                <textarea name='description' placeholder='description' onChange={updateValue} value={project.description} />\n\n                <div className='checks'>\n                    <label htmlFor='condition'>javascript</label>\n                    <input type='checkbox' name='javascript' onChange={updateValue} defaultChecked={project.javascript}/>\n                    <label htmlFor='reactjs'>react js</label>\n                    <input type='checkbox' name='reactjs' onChange={updateValue} defaultChecked={project.reactjs}/>\n                    <label htmlFor='userOriented'>user-oriented</label>\n                    <input type='checkbox' name='userOriented' onChange={updateValue} defaultChecked={project.userOriented}/>\n                    <label htmlFor='design'>design</label>\n                    <input type='checkbox' name='design' onChange={updateValue} defaultChecked={project.design}/>\n                </div>\n\n                <div className='edit-images'>\n                {\n                    project.defaultImage && \n                    <div>\n                        <h3>default</h3>\n                        <img alt='post img' src={project.defaultImage} />\n                    </div>\n                }\n                {\n                    project.displayImage && \n                    <div>\n                        <h3>display</h3>\n                        <img alt='post img' src={project.displayImage} />\n                    </div>\n                }\n                {\n                    project.detailImage && \n                    <div>\n                        <h3>detail</h3>\n                        <img alt='post img' src={project.detailImage} />\n                    </div>\n                }\n                </div>\n\n                <select name='imageName' onChange={ e => {setImageName(e.target.value)} }>\n                    <option defaultValue name='defaultImage' value={'defaultImage'}>default image</option>\n                    <option name='displayImage' value={'displayImage'}>display image</option>\n                    <option name='detailImage' value={'detailImage'}>detail image</option>\n                </select>\n\n                <label>\n                <div className='add'>{project.defaultImage ? 'new image' : 'add image'}</div>\n                <FileUploader\n                    hidden\n                    accept=\"image/*\"\n                    name=\"picture\"\n                    randomizeFilename\n                    storageRef={firebase.storage().ref(\"images\")}\n                    onUploadStart={handleUploadStart}\n                    onUploadError={handleUploadError}\n                    onUploadSuccess={handleUploadSuccess}\n                />\n                </label>\n                <button type='submit'>save</button>\n            </form>\n            <p>{status}</p>\n            </>\n        }\n        </main>\n    )\n}\n\n\nexport default Edit\n\n","import React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport { Link } from \"@reach/router\"\nimport './ProjectDetail.css'\nimport parse from 'html-react-parser'\nconst ProjectDetail = props => {  \n    const [project, setProject] = useState()\n    const [prev, setPrev] = useState(0)\n    const [next, setNext] = useState(0)\n\n    window.scrollTo(0,0)\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot( snapshot => setProject(snapshot.data()) )\n\n    }, [props.id])\n\n    useEffect(()=>{\n        firebase.firestore().collection('projects')\n            .orderBy('year', 'desc')\n            .get()\n            .then( projects => {\n                const array = projects.docs.map( p => p.id )\n                const myPos = array.indexOf(props.id)\n                setNext( myPos + 1 === array.length ? array[0] : array[myPos + 1])\n                setPrev( myPos === 0 ? array[array.length - 1] : array[myPos - 1])\n            } )\n    }, [props.id])\n\n    let styles = {}\n    if(project){\n        styles = {\n            parallax:{\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                height:'100vh',\n                width:'100vw',\n                backgroundAttachment:'fixed',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center center',\n            },\n        }\n    } \n    return (\n        <main className=\"project-detail\">\n            {\n            project \n            ?\n            <div>\n                <div style={styles.parallax}>\n                    <div className='parallax-overlay'>\n                        <div>\n                            <h1>{project.title}</h1>\n                            <p>{project.year}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className='project-content'>\n                    <div className='admin-actions pager'>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + prev}>prev</Link>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + next}>next</Link>\n                    </div>\n\n                    <div className='project-images'>                    \n                        {project.defaultImage && <img src={project.defaultImage} alt='hei' />}\n                        {project.displayImage && <img src={project.displayImage} alt='hei' />}\n                        {project.detailImage && <img src={project.detailImage} alt='hei' />}\n                    </div>                    \n\n                    <div>{parse(project.description)}</div>\n                    <div className='project-features'>\n                        <ul>\n                        {project.javascript && <li>Javascript</li>}\n                        {project.reactjs && <li>React JS</li>}\n                        {project.userOriented && <li>User oriented</li>}\n                        {project.design && <li>Design</li>}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            :\n            <h2 style={{width:'100vw',textAlign:'center'}}>Fetching project, hold on...</h2>\n            }\n        </main>\n    )\n} \nexport default ProjectDetail\n","import React, { useRef } from 'react'\nimport clamp from 'lodash-es/clamp'\nimport { useSprings, animated } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './Viewpager.css'\nimport { Link, navigate } from '@reach/router'\nimport { MdDelete } from 'react-icons/md'\nimport { FaCode } from 'react-icons/fa'\nimport firebase from './firebase'\n\nconst Viewpager = props => {\n    const deleteProject = (id) => {\n        if(window.confirm('sure?')){\n            firebase.firestore().collection('projects').doc(id).delete()\n        }\n    }\n\n  const pages = props.projects\n  const index = useRef(0)\n  const [array, set] = useSprings(pages.length, i => ({ x: i * window.innerWidth, sc: 1, display: 'block' }))\n  const bind = useGesture(({ down, delta: [xDelta], direction: [xDir], distance, cancel }) => {\n    if (down && distance > window.innerWidth / 2)\n      cancel((index.current = clamp(index.current + (xDir > 0 ? -1 : 1), 0, pages.length - 1)))\n    set(i => {\n      if (i < index.current - 1 || i > index.current + 1) return { display: 'none' }\n      const x = (i - index.current) * window.innerWidth + (down ? xDelta : 0)\n      const sc = down ? 1 - distance / window.innerWidth / 2 : 1\n      return { x, sc, display: 'block' }\n    })\n  })\n  return (\n    <div id='pager-main'>\n        <div id='pager-container'>\n            <div id='pager-root'>\n                {\n                array.map(({ x, display, sc }, i) => (\n                    <animated.div \n                        {...bind()} key={i} style={{ display, transform: x.interpolate(x => `translate3d(${x}px,0,0)`) }}>\n                        <animated.div \n                            style={{ transform: sc.interpolate(s => `scale(${s})`), backgroundImage: `url(${pages[i].data().defaultImage})` }} >\n                                <div className='slider-content'>\n                                    <div>\n                                        <h1>{pages[i].data().title}</h1>\n                                        <p onClick={ \n                                            () => navigate(process.env.PUBLIC_URL + '/projects/' + pages[i].id)}>\n                                            view project\n                                        </p>\n                                    </div>\n                                    {\n                                    props.signedIn &&                                        \n                                    <div className='admin'>\n                                        <Link to={process.env.PUBLIC_URL + '/edit/' + pages[i].id} className='edit-icons'>\n                                            <FaCode className='edit-icon' />\n                                        </Link>\n                                        <MdDelete onClick={()=>deleteProject(pages[i].id)} className='edit-icon' />\n                                    </div>\n                                    }\n                                </div>\n                        </animated.div>\n                    </animated.div>\n                ))\n                }\n            </div>\n        </div>\n    </div>\n  )\n  \n}\n\nexport default Viewpager\n\n","// HOME JS\n\nimport React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport Viewpager from './Viewpager'\nimport {IoIosAddCircle} from 'react-icons/io'\nimport { navigate } from '@reach/router'\n\nconst ProjectsAnimated = (props) => {\n    const [projects, setProjects] = useState([])\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('year', 'desc')\n            .onSnapshot(snapshot => \n                setProjects(snapshot.docs)\n            )\n    }, [])\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add({\n            title: '',\n            year:2020,\n            description: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(ref => {\n            navigate('/edit/' + ref.id)\n        }).catch( error => console.log(error))\n    } \n\n    return (\n        <main className='animated'>\n        {\n            props.signedIn &&\n            <div className='admin-actions' onClick={addProject}>\n                <IoIosAddCircle className='edit-icon' />\n            </div>\n        }\n\n        {\n            projects.length > 0 \n        ? \n            <Viewpager projects={projects} signedIn={props.signedIn}/>\n        :\n            <p>Getting projects, hold on...</p>\n        }\n        </main>\n\n    )\n}\n\nexport default ProjectsAnimated\n","import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport firebase from './components/firebase'\nimport { Router, navigate } from \"@reach/router\"\nimport Header from \"./components/Header\"\nimport Projects from \"./components/Projects\"\nimport Contact from \"./components/Contact\"\nimport Login from \"./components/Login\"\nimport Edit from \"./components/Edit\"\nimport ProjectDetail from './components/ProjectDetail'\nimport ProjectsAnimated from './components/ProjectsAnimated'\n\nconst App = () => {\n    const [signedIn, setSignedIn] = useState(false)\n    useEffect( ()=> {\n        firebase.auth().onAuthStateChanged(\n            user => {\n                if(user){\n                    setSignedIn(true)\n                    //remove local storage variable\n                    localStorage.removeItem(\"Logging in\")\n                }else{\n                    setSignedIn(false)\n                }\n            }\n        )\n    })\n\n    return (\n        <div>\n            <Header signedIn={signedIn} />            \n            <Router>\n                <ProjectsAnimated default path='/projects' signedIn={signedIn} />\n                <ProjectDetail  path={process.env.PUBLIC_URL + '/projects/:id'} />\n                <Contact path={process.env.PUBLIC_URL + '/contact'} signedIn={signedIn} />\n                <Login path={process.env.PUBLIC_URL + '/login'} signedIn={signedIn} />\n                <Edit path={process.env.PUBLIC_URL + '/edit/:id'} />\n            </Router>\n        </div>\n    )\n} \n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}