{"version":3,"sources":["components/firebase.js","components/Header.js","components/Project.js","components/Projects.js","components/Contact.js","components/Login.js","components/Edit.js","components/ProjectDetail.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","props","useState","show","setShow","className","onClick","color","size","to","process","getProps","isPartiallyCurrent","Project","project","defaultImage","src","alt","e","top","target","offsetHeight","index","setTop","navigate","id","title","year","byline","signedIn","window","confirm","firestore","collection","doc","delete","Projects","scrollContainer","useRef","useEffect","current","scroll","add","description","timestamp","FieldValue","serverTimestamp","then","ref","catch","error","console","log","projects","map","next","length","prev","key","data","Contact","href","Login","localStorage","getItem","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","setItem","currentUser","displayName","signOut","photoURL","Edit","setProject","status","setStatus","imageName","setImageName","scrollTo","onSnapshot","snapshot","updateValue","persist","type","prevProject","name","checked","value","onSubmit","preventDefault","update","err","message","onChange","placeholder","htmlFor","defaultChecked","javascript","reactjs","userOriented","design","displayImage","detailImage","defaultValue","hidden","accept","randomizeFilename","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","str","n","lastIndexOf","slice","parseThumbname","ProjectDetail","setPrev","setNext","orderBy","get","array","docs","p","myPos","indexOf","styles","parallax","backgroundImage","height","width","backgroundAttachment","backgroundSize","backgroundPosition","style","parse","textAlign","App","setSignedIn","setProjects","onAuthStateChanged","user","removeItem","basepath","default","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8ff8ed5.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC5ize_t5L01W_Q3TZmmxTfye1Z9rOSp0E\",\n    authDomain: \"web-firestore-authentication.firebaseapp.com\",\n    databaseURL: \"https://web-firestore-authentication.firebaseio.com\",\n    projectId: \"web-firestore-authentication\",\n    storageBucket: \"web-firestore-authentication.appspot.com\",\n    messagingSenderId: \"954309262588\",\n    appId: \"1:954309262588:web:c7d23d1466067040a0ab79\",\n    measurementId: \"G-TY9H31DPG5\"\n}\n// Initialize Firebase, firestore and authentication\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase","// HEADER\n\nimport React, {useState} from 'react'\nimport './Header.css'\nimport { Link } from '@reach/router'\nimport { MdMenu, MdClose } from 'react-icons/md'\n\nconst Header = (props) => {\n    const [show,setShow] = useState(false)\n    \n    const isPartiallyActive = ({\n        isPartiallyCurrent\n      }) => {\n        return isPartiallyCurrent\n          ? { className: \"active\" }\n          : null\n      }\n    return (\n        <div className='header-container'>\n            <div  onClick={() => setShow(!show)} className='burger'>\n                {\n                show \n                ? <MdClose color='white' size='32'/>\n                : <MdMenu color='white' size='32'/>\n                }\n            </div>\n        <header className={show ? 'mobile' : ''} onClick={ () => setShow(false) }>\n            <Link to={process.env.PUBLIC_URL + '/projects'} getProps={isPartiallyActive}>projects</Link>\n            <Link to={process.env.PUBLIC_URL + '/contact'}>contact</Link>\n        </header>\n        </div>\n    )\n}\n\nexport default Header","// PROJECT JS\nimport React from 'react'\nimport firebase from './firebase'\nimport { Link, navigate } from \"@reach/router\"\nimport {FaCode} from 'react-icons/fa'\nimport {MdDelete, MdSettingsPower} from 'react-icons/md'\nimport './Project.css'\n\nconst Project = (props) => {\n    const deleteProject = () => {\n        if(window.confirm('sure?')){\n            firebase.firestore().collection('projects').doc(props.id).delete()\n        }\n    }\n    return (\n        \n        <div className=\"project\">\n            {\n            props.project.defaultImage && \n                <img src={props.project.defaultImage} alt='hei' />\n            }\n            <div className='project-inner' onClick={ (e) => {\n                let top = e.target.offsetHeight * props.index\n                props.setTop(top)\n                navigate(process.env.PUBLIC_URL + '/projects/' + props.id);                \n                }}>\n                <div>\n                    <h1>{props.project.title}</h1>\n                    <div className='project-year'>{props.project.year}</div>\n                    <div className='project-byline'>{props.project.byline}</div>\n                </div>\n            </div>\n\n            {props.signedIn && \n            <div className='admin'>\n                <Link to={process.env.PUBLIC_URL + '/edit/' + props.id}><FaCode /></Link>\n                <MdDelete onClick={deleteProject} />\n            </div>\n            }\n        </div>\n    )\n} \nexport default Project\n","import React, {useEffect, useRef} from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport {IoIosAddCircle} from 'react-icons/io'\nimport './Projects.css' \nimport { navigate } from '@reach/router'\n\nconst Projects = props => {\n    const scrollContainer = useRef()\n    useEffect(()=>{\n        scrollContainer.current.scroll(0, props.top)\n    })\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add({\n            title: '',\n            year:2020,\n            description: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(ref => {\n            navigate(process.env.PUBLIC_URL + '/edit/' + ref.id)\n        }).catch( error => console.log(error))\n    } \n\n    return (\n        <main className='projects'>\n        {\n            props.signedIn &&\n            <div className='admin-actions' onClick={addProject}>\n                <IoIosAddCircle className='edit-icon' />\n            </div>\n        }\n\n        {\n            props.projects \n            ? \n            <div ref={scrollContainer} className='projects-container'>\n            \n            {\n                props.projects.map(\n                    (doc, index) => \n                    <Project \n                        next={props.projects[index < (props.projects.length -1) ? index + 1 : 0].id} \n                        prev={props.projects[index !==0 ? index -1 : props.projects.length -1].id} \n                        index={index}\n                        setTop={props.setTop}\n                        key={doc.id} id={doc.id} project={doc.data()} signedIn={props.signedIn}/>\n                )\n            }\n        </div>\n        :\n            <p>Getting projects, hold on...</p>\n        }\n        </main>\n\n    )\n}\n\nexport default Projects\n","import React from 'react'\n\nconst Contact = (props) => {\n    return(\n        <main>\n            <div className='contact-info'>\n                <h1>Contact me</h1>\n                <p>Simon Moe</p>\n                <p>+45 6556 9898</p>\n                <a \n                href='mailto:simmoe@gmail.com'>\n                simmoe@gmail.com\n                </a>\n            </div>\n        </main>\n    )\n}\n\nexport default Contact","// LOGIN JS\n\nimport React from 'react'\nimport firebase from './firebase'\n\nconst Login = (props) => {\n\n    const loginWithGoogle = () => {\n\n        //make sure you've added google as sign in method in your firebase console\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth().signInWithPopup(provider)\n            .catch(function (error) {\n                console.log(error)\n            })\n        //set a local storage variable to indicate that login is pending\n        localStorage.setItem(\"Logging in\", true)\n    }\n\n    return (\n      <main className=\"login\">\n        {!props.signedIn && (\n            <>\n                {!localStorage.getItem(\"Logging in\") && <button onClick={loginWithGoogle}>use google to sign in</button>}\n                {localStorage.getItem(\"Logging in\") && <p>Log in progress, hold on...</p>}\n            </>\n        )}\n        {props.signedIn && (\n            <div>\n            <h1>You are logged in to firebase</h1>\n            <p>Welcome {firebase.auth().currentUser.displayName}. You are now signed-in.</p>\n            <button onClick={() => {firebase.auth().signOut(); }}>Sign-out</button>        \n            {firebase.auth().currentUser.photoURL && <img src={firebase.auth().currentUser.photoURL} alt='profile' />}\n            </div>\n        )}\n    </main>\n    )\n}\n\nexport default Login\n","import React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport { Link } from '@reach/router'\nimport FileUploader from 'react-firebase-file-uploader'\nimport './Edit.css'\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState() \n    const [status, setStatus] = useState('')\n    const [imageName, setImageName] = useState('defaultImage')\n\n    useEffect( () => {\n        window.scrollTo(0, 0)       \n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot(snapshot => {\n            setProject(snapshot.data())\n        })\n    }, [props.id])\n\n    const updateValue =  \n    //e.persist makes the element visible in the callback function\n    //the spread object syntax is JSX - makes the given value of post stay, while we update this value\n        e => {\n        e.persist()\n\n        switch(e.target.type){\n            case 'checkbox':\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.checked\n            }))\n            break\n\n            default:\n            setProject(prevProject => ({\n                ...prevProject,\n                [e.target.name]: e.target.value\n            }))\n\n        }\n    }\n\n    const saveProject = (e) => {\n        e.preventDefault() //abort reloading the page\n        setStatus('updating, please hold...')\n        firebase.firestore().collection('projects').doc(props.id).update(project)\n        .then(()=>{setStatus('project updated')})\n        .catch(err => {\n            setStatus(\"Error saving project: \" + err.message)\n        })\n    }\n\n    const parseThumbname = (str) => {\n        const n = str.lastIndexOf('.')\n        const name = str.slice(0, n)\n        const ending = str.slice(n, str.length)\n        return name + '_400x400' + ending\n    }\n\n    const handleUploadStart = () => {setStatus('uploading image, please hold')}\n    const handleUploadError = (error) => {setStatus(error.message)}\n    const handleUploadSuccess = filename => {\n        firebase\n          .storage()\n          .ref(\"images\")\n          .child(filename)\n          .getDownloadURL()\n          .then(\n              url => setProject( prevProject => (\n            {\n                ...prevProject,\n                [imageName]: url,\n                [imageName + 'thumbnailImage']:parseThumbname(url)\n            }\n          ) ) )\n          setStatus('image ready')\n    }\n    return(\n        <main className='edit'>\n        <h1>Edit project</h1>\n        <p>Project id: {props.id}</p>\n        {\n            project && \n            <>\n            <form onSubmit={saveProject}>\n                <input name='title' onChange={updateValue} value={project.title}    placeholder='project title' />\n                <input name='year'  onChange={updateValue} value={project.year}     placeholder='year' />\n                <input name='byline'onChange={updateValue} value={project.byline}   placeholder='byline' />\n\n                <textarea name='description' placeholder='description' onChange={updateValue} value={project.description} />\n\n                <div className='checks'>\n                    <label htmlFor='condition'>javascript</label>\n                    <input type='checkbox' name='javascript' onChange={updateValue} defaultChecked={project.javascript}/>\n                    <label htmlFor='reactjs'>react js</label>\n                    <input type='checkbox' name='reactjs' onChange={updateValue} defaultChecked={project.reactjs}/>\n                    <label htmlFor='userOriented'>user-oriented</label>\n                    <input type='checkbox' name='userOriented' onChange={updateValue} defaultChecked={project.userOriented}/>\n                    <label htmlFor='design'>design</label>\n                    <input type='checkbox' name='design' onChange={updateValue} defaultChecked={project.design}/>\n                </div>\n\n                <div className='edit-images'>\n                {\n                    project.defaultImage && \n                    <div>\n                        <h3>default</h3>\n                        <img alt='post img' src={project.defaultImage} />\n                    </div>\n                }\n                {\n                    project.displayImage && \n                    <div>\n                        <h3>display</h3>\n                        <img alt='post img' src={project.displayImage} />\n                    </div>\n                }\n                {\n                    project.detailImage && \n                    <div>\n                        <h3>detail</h3>\n                        <img alt='post img' src={project.detailImage} />\n                    </div>\n                }\n                </div>\n\n                <select name='imageName' onChange={ e => {setImageName(e.target.value)} }>\n                    <option defaultValue name='defaultImage' value={'defaultImage'}>default image</option>\n                    <option name='displayImage' value={'displayImage'}>display image</option>\n                    <option name='detailImage' value={'detailImage'}>detail image</option>\n                </select>\n\n                <label>\n                <div className='add'>{project.defaultImage ? 'new image' : 'add image'}</div>\n                <FileUploader\n                    hidden\n                    accept=\"image/*\"\n                    name=\"picture\"\n                    randomizeFilename\n                    storageRef={firebase.storage().ref(\"images\")}\n                    onUploadStart={handleUploadStart}\n                    onUploadError={handleUploadError}\n                    onUploadSuccess={handleUploadSuccess}\n                />\n                </label>\n                <button type='submit'>save</button>\n            </form>\n            <p>{status}</p>\n            <Link to={'/projects/'+props.id}>view</Link>\n            </>\n        }\n        </main>\n    )\n}\n\n\nexport default Edit\n\n","import React, {useEffect, useState} from 'react'\nimport firebase from './firebase'\nimport { Link } from \"@reach/router\"\nimport './ProjectDetail.css'\nimport parse from 'html-react-parser'\nconst ProjectDetail = props => {  \n    const [project, setProject] = useState()\n    const [prev, setPrev] = useState(0)\n    const [next, setNext] = useState(0)\n\n    window.scrollTo(0,0)\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n            .onSnapshot( snapshot => setProject(snapshot.data()) )\n\n    }, [props.id])\n\n    useEffect(()=>{\n        firebase.firestore().collection('projects')\n            .orderBy('year', 'desc')\n            .get()\n            .then( projects => {\n                const array = projects.docs.map( p => p.id )\n                const myPos = array.indexOf(props.id)\n                setNext( myPos + 1 === array.length ? array[0] : array[myPos + 1])\n                setPrev( myPos === 0 ? array[array.length - 1] : array[myPos - 1])\n            } )\n    }, [props.id])\n\n    let styles = {}\n    if(project){\n        styles = {\n            parallax:{\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                height:'100vh',\n                width:'100vw',\n                backgroundAttachment:'fixed',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center center',\n            },\n        }\n    } \n    return (\n        <main className=\"project-detail\">\n            {\n            project \n            ?\n            <div>\n                <div style={styles.parallax}>\n                    <div className='parallax-overlay'>\n                        <div>\n                            <h1>{project.title}</h1>\n                            <p>{project.year}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className='project-content'>\n                    <div className='admin-actions pager'>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + prev}>prev</Link>\n                        <Link to={process.env.PUBLIC_URL + '/projects/' + next}>next</Link>\n                    </div>\n\n                    <div className='project-images'>                    \n                        {project.defaultImage && <img src={project.defaultImage} alt='hei' />}\n                        {project.displayImage && <img src={project.displayImage} alt='hei' />}\n                        {project.detailImage && <img src={project.detailImage} alt='hei' />}\n                    </div>                    \n\n                    <div>{parse(project.description)}</div>\n                    <div className='project-features'>\n                        <ul>\n                        {project.javascript && <li>Javascript</li>}\n                        {project.reactjs && <li>React JS</li>}\n                        {project.userOriented && <li>User oriented</li>}\n                        {project.design && <li>Design</li>}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            :\n            <h2 style={{width:'100vw',textAlign:'center'}}>Fetching project, hold on...</h2>\n            }\n        </main>\n    )\n} \nexport default ProjectDetail\n","import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport firebase from './components/firebase'\nimport { Router } from \"@reach/router\"\nimport Header from \"./components/Header\"\nimport Projects from \"./components/Projects\"\nimport Contact from \"./components/Contact\"\nimport Login from \"./components/Login\"\nimport Edit from \"./components/Edit\"\nimport ProjectDetail from './components/ProjectDetail'\n\nconst App = () => {\n    const [signedIn, setSignedIn] = useState(false)\n    const [projects, setProjects] = useState([])\n    const [top, setTop] = useState(0)\n\n    useEffect(() => {\n        console.log('fetching images')\n        firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('year', 'desc')\n            .onSnapshot(snapshot => \n                setProjects(snapshot.docs)\n            )\n    }, [])\n\n    useEffect( ()=> {\n        firebase.auth().onAuthStateChanged(\n            user => {\n                if(user){\n                    setSignedIn(true)\n                    //remove local storage variable\n                    localStorage.removeItem(\"Logging in\")\n                }else{\n                    setSignedIn(false)\n                }\n            }\n        )\n    })\n\n    return (\n        <div>\n        {\n        projects \n        ?\n        <>\n            <Header signedIn={signedIn} />            \n            <Router basepath={process.env.PUBLIC_URL}>\n                <Projects top={top} setTop={setTop} projects={projects} default path='/projects' signedIn={signedIn} />\n                <ProjectDetail  path={'/projects/:id'} />\n                <Contact path={'/contact'} signedIn={signedIn} />\n                <Login path={'/login'} signedIn={signedIn} />\n                <Edit path={'/edit/:id'} />\n            </Router>\n        </>\n        :\n        <h2>Fetching data...</h2>\n        }\n        </div>\n    )\n} \n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}